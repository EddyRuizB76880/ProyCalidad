@using EmprendeUCR_WebApplication.Data.Services
@using EmprendeUCR_WebApplication.Data.Entities
@inject ProductService ProductService
@inject NavigationManager NavigationManager
@inject UserService UserService 
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<div class="w-100 navBar">

    <div class="head w-100 d-flex flex-row justify-content-between align-items-center px-5">
        <div class="logo">

            @*
                Line of code to display the site's name. Clicking on it will take
                the user back to the main menu.
            *@
            <a href="/" class="color-white h2">EMPRENDEUCR</a>
        </div>
        <div class="acount-links">
            @* If the user had previously clicked on the login button, then... *@

            @if (!string.IsNullOrEmpty(myEmail))
            {
                @if (@amountProductsNotifications == 0)
                {
                    <a Do Nothing class="color-silver mx-5 a-white isDisabled btn" data-toggle="tooltip" data-placement="bottom" title="El carrito se encuentra vacío.">
                        <span class="material-icons-outlined icon-l">
                            shopping_cart
                        </span>@amountProductsNotifications
                    </a>
                }
                else
                { @* If instead, the shopping cart has items inside, then... *@
                <a href="ShoppingCart" class="color-silver mx-5 a-white btn">
                    <span class="material-icons-outlined icon-l">
                        shopping_cart
                    </span>@amountProductsNotifications
                </a>
            }

                @* Update notifications when the user logs in. *@
                <a href="/" class="color-silver mx-5 a-white btn">
                    <span class="material-icons icon-l">
                        notifications
                    </span>
                </a>

                @* Display account circle when the user logs in. *@
                <img width="40" height="40" src="data:image;base64,@System.Convert.ToBase64String(UserService.GetUserByEmail(myEmail).Photo)" class="rounded-circle" @onclick="goProfile">

            }
            else
            {
                @* If the user has not logged in, then display the log in button *@
                <a href="/registro" class="color-silver mx-5 a-white">
                    Registrarse
                </a>
                <button @onclick="logear" class="bg-white border-none p-2">Iniciar Sesion</button>
            }
        </div>
    </div>

    @* Block of code to adjust the navigation menu's position onscreen. *@
    <nav id="SecondaryNav" class="SecondaryNav bg-white  w-100 d-flex flex-row justify-content-between align-items-center px-5">
        <ul class="d-flex flex-row align-bottom">
            <li class=" "> <a href=@homeRef class="color-grey mx-5 p-2"> HOME </a></li>
            <li class=" "> <a href="/listProducts" class="color-grey mx-5 p-2"> PRODUCTOS </a></li>
            <li class=" "> <a href="/ListServices" class="color-grey mx-5 p-2"> SERVICIOS </a></li>
            <li class=" "> <a href="/Categories" class="color-grey mx-5"> CATEGORIAS </a></li>
            <li class=" "> <a href="/AddOffer" class="color-grey mx-5"> CREAR OFERTA </a></li>
            <li class=" "> <a href="/Offers" class="color-grey mx-5"> OFERTAS </a></li>
            <li class=" "> <a href="/about" class="color-grey mx-5"> SOBRE NOSOTROS </a></li>
        </ul>

    </nav>
</div>

@code {
    private string myEmail;
    private string homeRef;
    private string profileRef;
    private int myType;

    // Int value used to store the total amount of products stored in
    // the shopping cart. To be used in the HTML section of this file.
    private int amountProductsNotifications;

    // Virtual method from Blazor overridden to adapt it to our program.
    // It invokes a method to get the total number of elements in a table
    // when the blazor program starts. In this case, it retrieves the
    // number of articles from the SC table.

    protected override async Task OnInitializedAsync()
    {
        amountProductsNotifications = ProductService.GetProductsQuantity();
        myEmail = await sessionStorage.GetItemAsync<string>("Email");
        myType = await sessionStorage.GetItemAsync<int>("Type");
        this.UpdateParams();
    }

    public void UpdateParams()
    {

        switch (myType)
        {
            case 1:
                homeRef = "/HomeClient";
                profileRef = "/ProfileClient";
                break;
            case 2:
                homeRef = "/HomeEntrepreneur";
                profileRef = "/ProfileEntrepreneur";
                break;
            case 3:
                homeRef = "/HomeAdministrator";
                profileRef = "/ProfileAdministrator";
                break;
            default:
                homeRef = "";
                profileRef = "";
                break;
        }
        StateHasChanged();
    }

    private void logear()
    {
        NavigationManager.NavigateTo("/Login");
    }

    private void goProfile()
    {
        NavigationManager.NavigateTo(profileRef);
    }
}

@*
@{
    MenuService["NavMenu"] = this;
}
*@
