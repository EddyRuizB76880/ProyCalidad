@page "/ViewOffer"
@page "/ViewOffer/{Offer_ID}"
@using EmprendeUCR_WebApplication.Data.Services
@using EmprendeUCR_WebApplication.Data.Entities
@using System;
@inject ProductService  ProductService
@inject ServiceService  ServiceService
@inject NavigationManager NavigationManager
@inject EntrepreneurService EntrepreneurService
@inject Product_ServiceService Product_ServiceService
@inject OfferService OfferService
@inject Is_OfferService Is_OfferService



<h3>Oferta #@Offer_ID</h3>

<form>
    <div class="row">
        <!-- Oferta -->
        <div class="cols-xs-3">

            <table>
                <!-- Display de los nombres de las columnas (Precio, fechas etc)-->
                <thead>
                    <tr>
                        <th style="width:20%">Dueño de la oferta</th>
                        <th style="width:20%">ID de la oferta</th>
                        <th style="width:20%">Descripción</th>
                        <th style="width:20%">Precio normal</th>
                        <th style="width:20%">Precio nuevo</th>
                        <th style="width:20%">Descuento</th>
                        <th style="width:20%">Inicio de oferta</th>
                        <th style="width:20%">Final de oferta</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Display oferta especifica-->
                    @foreach (var offer in _offers)
                    {
                        @if (offer.Offer_ID == Int32.Parse(Offer_ID))
                        {
                            <!--Obtiene la suma de todos los objetos ligados a la oferta actual)-->
                            double actualDiscountPostOffer = (Double.Parse(offer.Discount.ToString()) / totalOfTheOfferOriginalAmount) * 100;
                            actualDiscountPostOffer = 100 - actualDiscountPostOffer;
                            string displayDiscount = string.Format("{0:N2}%", actualDiscountPostOffer);

                            <tr>
                                <!-- Saca el ID de la oferta-->
                                <td>@userEmail</td>

                                <!-- Saca el ID de la oferta-->
                                <td>@offer.Offer_ID</td>

                                <!-- Saca la descripicon de Offer-->
                                <td>@offer.Offer_Description</td>

                                <!-- Para el precio normal ocupa iterar por todos los Is_Offer asociados al ID de Offer-->
                                <td>@totalOfTheOfferOriginalAmount</td>

                                <!-- Saca el precio de la oferta de Offer-->
                                <td>@offer.Discount</td>

                                <!-- El descuento se saca con precio normal y la oferta (ej: 15% de descuento)-->
                                <td>@displayDiscount%</td>

                                <!-- Fecha de inicio de oferta-->
                                <td>@offer.Initial_Date</td>

                                <!-- Fecha de final de oferta-->
                                <td>@offer.Expire_Date</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
            <!-- Products Display-->>
            @if (_myProducts?.Count > 0)
            {
                <h3>Productos en la oferta</h3>
                <table>
                    <!-- Display de los nombres de las columnas (Nombre, precio, etc..c)-->
                    <thead>
                        <tr>
                            <th style="width:20%">Nombre</th>
                            <th style="width:20%">Descripción</th>
                            <th style="width:20%">Precio</th>
                            <th style="width:20%">Categoria</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Display de Productos-->
                        @foreach (var product in _myProducts)
                        {
                        <tr>
                            <!-- Saca el Nombre del Productos-->
                            <td>@product.Product_Name</td>

                            <!-- Despliega la descripcion del Productos-->
                            <td>@product.Product_Description</td>

                            <!-- Despliega el precio del Productos-->
                            <td>@product.Price</td>

                            <!-- Despliega el id de la categoria-->
                            <td>@product.Category_ID</td>
                        </tr>
                        }
                    </tbody>
                </table>
            }
            <!-- Service Display-->>
            @if (_myServices?.Count > 0)
            {
                <h3>Servicios en la oferta</h3>
                <table>
                    <!-- Display de los nombres de las columnas (Nombre, precio, etc..c)-->
                    <thead>
                        <tr>
                            <th style="width:20%">Nombre</th>
                            <th style="width:20%">Descripción</th>
                            <th style="width:20%">Precio por hora</th>
                            <th style="width:20%">Categoria</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Display de servicios-->
                        @foreach (var service in _myServices)
                        {
                            <tr>
                                <!-- Saca el Nombre del servicioa-->
                                <td>@service.Service_Name</td>

                                <!-- Despliega la descripcion del servicio-->
                                <td>@service.Service_Description</td>

                                <!-- Despliega el precio por hora del servicio-->
                                <td>@service.Price_per_hour</td>

                                <!-- Despliega el id de la categoria-->
                                <td>@service.Category_ID</td>
                            </tr>

                        }
                    </tbody>
                </table>
            }
            <!--Botones-->
            <div class="col-xs-6">
                <!--Volver-->
                <input type="button" class="btn btn-primary btn-space" @onclick="@Cancel" value="Volver" />

                <!-- Comprar oferta-->
                <input type="button" class="btn btn-primary btn-space" @onclick="@buyOffer" value="Comprar oferta" />
            </div>
        </div>
    </div>


</form>
@functions{
    [Parameter]
    public string Offer_ID { get; set; }
}

@code {
    IList<Offer> _offers = new List<Offer>();
    IList<Is_Offer> _Is_offer = new List<Is_Offer>();
    Product myProduct = new Product();
    Service myService = new Service();
    Offer offer = new Offer();
    IList<Product> _products;
    IList<Service> _service;
    IList<Product> _myProducts;
    IList<Service> _myServices;

    int totalOfTheOfferOriginalAmount = 0;
    double discount = 0;
    string userEmail = "default";
    string is_offerEmail = "";

    protected override async Task OnInitializedAsync()
    {
        await loadAll();
    }

    public void getDataFromActualOffer(int actual_offerID)
    {
        foreach (var item in _Is_offer)
        {
            if (actual_offerID == item.Offer_ID)
            {
                foreach (var product in _products)
                {
                    if (item.Code_ID == product.Code_ID)
                    {
                        /** Sum the price to the total of the offers amount*/
                        totalOfTheOfferOriginalAmount += product.Price;
                        userEmail = myProduct.Entrepreneur_Email;

                        /** Copy the Product attributes and copy it into myProduct info*/
                        myProduct.Category_ID = product.Category_ID;
                        myProduct.Code_ID = product.Code_ID;
                        myProduct.Price = product.Price;
                        myProduct.Product_Description = product.Product_Description;
                        myProduct.Product_Name = product.Product_Name;
                        myProduct.Entrepreneur_Email = product.Entrepreneur_Email;
                        /** Add the product to my related products*/
                        _myProducts.Add(myProduct);
                        /** Links the email to the userEmail*/
                        is_offerEmail = product.Entrepreneur_Email;

                    }
                }
                foreach (var service in _service)
                {
                    if (item.Code_ID == service.Code_ID)
                    {
                        /** Sum the price to the total of the offers amount*/
                        totalOfTheOfferOriginalAmount += service.Price_per_hour;
                        userEmail = myService.Entrepreneur_Email;
                        /** Copy the Service attributes and copy it into myService info*/
                        myService.Category_ID = service.Category_ID;
                        myService.Code_ID = service.Code_ID;
                        myService.Price_per_hour = service.Price_per_hour;
                        myService.Service_Description = service.Service_Description;
                        myService.Service_Name = service.Service_Name;
                        myService.Entrepreneur_Email = service.Entrepreneur_Email;
                        /** Add the service to my related products*/
                        _myServices.Add(myService);
                        /** Links the email to the userEmail*/
                        is_offerEmail = service.Entrepreneur_Email;

                    }
                }
            }
        }
    }

    void buyOffer()
    {
        string offer_id = Offer_ID;
        // NavigationManager.NavigateTo("ViewOffer");
    }

    void editOffer(Offer offer)
    {
        // NavigationManager.NavigateTo("EditOffer");
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("Offers");
    }

    public async Task loadAll()
    {
        await loadOffers();
        await loadIs_Offers();
        await loadProducts();
        await loadService();

        getDataFromActualOffer(Int32.Parse(Offer_ID));
    }

    public async Task loadOffers()
    {
        _offers = await OfferService.GetAllOffersAsync();
    }

    public async Task loadIs_Offers()
    {
        _Is_offer = await Is_OfferService.GetAllIs_OffersAsync();
    }

    public async Task loadProducts()
    {
        _products = await ProductService.GetAllProductsAsync();
    }

    public async Task loadService()
    {
        _service = await ServiceService.GetAllServicesAsync();
    }

}