<h1>Registration Data</h1>
@page "/registrationData"
@using EmprendeUCR_WebApplication.Data.Services
@using EmprendeUCR_WebApplication.Data.Entities
@inject UserService UserService
@inject ProvinceService ProvinceService
@inject CantonService CantonService
@inject DistrictService DistrictService
@inject CredentialsService CredentialsService
@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager

<form>
    <EditForm Model="@newUser" OnValidSubmit="@insertUser">
        <div class="mb-3">
            <label for="inputEmail" class="form-label" style="font-size: 25px">Email address</label>
            <InputText type="email" @bind-Value="newUser.Email" class="form-control" id="inputEmail" aria-describedby="emailHelp" style="width: 70%" required maxlength="100" />
            <div id="emailHelp" class="form-text">Ejemplo: nombre.apellido@correo.com</div>
            <div class="invalid-feedback">
                Debe ingresar un correo electrónico
            </div>
        </div>
        <div class="mb-3">
            <label for="inputName" class="form-label" style="font-size: 25px">Name</label>
            <InputText type="text" @bind-Value="newUser.Name" class="form-control" id="inputName" style="width: 20%" maxlength="15"/>
        </div>
        <div class="mb-3">
            <label for="inputFLastName" class="form-label" style="font-size: 25px">First Last Name</label>
            <InputText type="text" @bind-Value="newUser.F_Last_Name" class="form-control" id="inputFLastName" style="width: 20%" maxlength="15" />
        </div>
        <div class="mb-3">
            <label for="inputSLastName" class="form-label" style="font-size: 25px">Second Last Name</label>
            <InputText type="text" @bind-Value="newUser.S_Last_Name" class="form-control" id="inputSLastName" style="width: 20%" maxlength="15" />
        </div>
        <div class="mb-3">
            <label for="inputBDate" class="control-label" style="font-size: 25px">Birth Date</label>
            <InputDate type="date" @bind-Value="newUser.Birth_Date" class="form-control" id="inputBDate" style="width: 15%" />
        </div>

        <div class="mb-3">
            <label for="Select Address" class="control-label" style="font-size: 25px">Address</label>
            <br>
            @if (_isLoading)
            {
                <p>Loading...</p>
            }
            else
            {
                <select id="Province" style="width: 13%; font-size: 20px" @onchange="getCantons">
                    @foreach (var province in _province)
                    {
                        <option>@province.Name</option>
                    }
                </select>


                <select id="Canton" style="width: 13%; font-size: 20px" @onchange="getDistricts">
                    @foreach (var canton in _canton)
                        {
                            <option>@canton.Name</option>
                        }
                </select>

                <select id="District" style="width: 13%; font-size: 20px">
                    @foreach (var district in _district)
                    {
                        <option>@district.Name</option>
                    }
                </select> 
            }
        </div>

        <div class="mb-3">
            <label for="inputPassword" class="form-label" style="font-size: 25px">Password</label>
            <InputText type="@txtType" @bind-Value="password" class="form-control pwd" id="inputPassword" aria-describedby="passwordHelp" style="width: 30%" maxlength="30" required />
            <div id="passwordHelp" class="form-text">Tamaño máximo: 30 carácteres</div>
            <button type="button" class="btn btn-info" @onclick="@showPassword" style="border: double">@text</button>
            <div class="invalid-feedback">
                Debe ingresar una contraseña
            </div>
        </div>
        <br><br>
        <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>
</form>

@code {
    private User newUser = new User();
    private Credentials newCredentials = new Credentials();
    private string password;
    private string txtType = "password";
    private string text = "Mostrar";
    private bool _isLoading = true;
    private IList<Province> _province;
    private IList<Canton> _canton;
    private IList<District> _district;
    private string province;
    private string canton;
    private string district;

    private async void insertUser()
    {
        User u = new User
        {
            Email = newUser.Email,
            Name = newUser.Name,
            F_Last_Name = newUser.F_Last_Name,
            S_Last_Name = newUser.S_Last_Name,
            Birth_Date = newUser.Birth_Date,
            Province_Name = province,
            Canton_Name = canton,
            District_Name = await JsRuntime.InvokeAsync<string>("getValue", "District"),
            Email_Confirmation = false,
        };

        Credentials c = new Credentials
        {
            User_Email = newUser.Email,
            Password = password,
        };

        


        UserService.AddUser(u);
        CredentialsService.AddCredentials(c);
        NavigationManager.NavigateTo("listUsers");

        //newUser = new User();
    }

    public void showPassword()
    {
        if (txtType == "password")
        {
            txtType = "text";
            text = "Esconder";
        }
        else
        {
            txtType = "password";
            text = "Mostrar";
        }
    }

    //Address Information
    protected override async Task OnInitializedAsync()
    {
        _province = await ProvinceService.GetAsync();
        _canton = await CantonService.GetAsync();
        _district = await DistrictService.GetAsync();
        _isLoading = false;
    }  

    async Task getCantons()
    {
        province = await JsRuntime.InvokeAsync<string>("getValue", "Province");
        _canton = CantonService.GetList(province);
    }

    async Task getDistricts()
    {
        canton = await JsRuntime.InvokeAsync<string>("getValue", "Canton");
        _district = DistrictService.GetList(canton);
    }
}