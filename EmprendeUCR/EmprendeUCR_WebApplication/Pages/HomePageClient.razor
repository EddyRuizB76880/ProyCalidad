@page "/"
@using EmprendeUCR_WebApplication.Data.Services
@using EmprendeUCR_WebApplication.Data.Entities
@using EmprendeUCR_WebApplication.Data.Services.Categories
@using Syncfusion.Blazor.TreeGrid;
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Inputs
@inject CategoryService CategoryService
@inject AddCategoryService AddCategories
@inject DeleteCategoryService DeleteCategories
@inject ProductService ProductService
@inject Product_PhotosService Product_PhotosService
@inject EditCategoryService EditCategories
@inject NavigationManager NavigationManager
@inject Shopping_Cart_Has_Service_Pandemic Shopping_Cart_Has_Service
@inject IJSRuntime JsRuntime

@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

@if (_isLoading)
{
    <p>Cargando</p>
}
else
{
    <div class="padre">

        <div class="izquierdo">

            <div class="flex-buscar">
                <input @bind="@inputValue" @onkeyup="@EnterKey" class="form-control mr-sm-2" type="search" placeholder="Buscar productos" aria-label="Search" />
                <button @onclick="buscar" class="btn btn-primary" type="submit">Buscar</button>
            </div>

            <SfToolbar ID="ToolBar">
                <ToolbarItems>
                    <ToolbarItem OnClick="@TreeGrid.ExpandAll" Text="Expandir" TooltipText="Muestra todas categorías"></ToolbarItem>
                    <ToolbarItem OnClick="@TreeGrid.CollapseAll" Text="Colapsar" TooltipText="Oculta todas las subcategorías"></ToolbarItem>
                </ToolbarItems>
            </SfToolbar>
            <SfTreeGrid ID="TreeGrid" @ref="TreeGrid" AllowSorting="true" AllowRowDragAndDrop="true" DataSource="@_categories" IdMapping="Id" ParentIdMapping="ParentId" AllowSelection="true" TreeColumnIndex="0" EnableCollapseAll="true">
                <TreeGridEvents TValue="Category" RowDropped="Rowdrop" RowSelected="SelectionHandler"></TreeGridEvents>
                <TreeGridSortSettings>
                    <TreeGridSortColumns>
                        <TreeGridSortColumn Field="Title" Direction="Syncfusion.Blazor.Grids.SortDirection.Ascending"></TreeGridSortColumn>
                    </TreeGridSortColumns>
                </TreeGridSortSettings>
                <TreeGridColumns>
                    <TreeGridColumn Field="Title" HeaderText="Nombre" Width="100"></TreeGridColumn>
                    <TreeGridColumn Field="Description" HeaderText="Descripción" Width="160"></TreeGridColumn>
                </TreeGridColumns>
            </SfTreeGrid>
        </div>

        <div class="derecho">

            <h5 class="title">Ofertas</h5>

            <div class="container my-5">
                <div id="carousel1" class="carousel slide carousel-dark text-center" data-bs-ride="carousel">
                    <div class="carousel-inner py-4">

                        @if (_offerProducts.Count() > 0)
                        {
                            int productsSize = _offerProducts.Count();

                            for (int i = 0; i < productsSize; i++)
                            {
                                if (i == 0)
                                {
                                    <div class="carousel-item active">
                                        <div class="container">
                                            <div class="row">

                                                @for (int j = i; j < i + 3; j++)
                                                {
                                                    <div class="col-sm">
                                                        <div class="card">
                                                            @if (photosDisplay.FirstOrDefault(p => p.Code_ID == _offerProducts[j].Code_ID) != null)
                                                            {
                                                                <img class="img-card m-auto" src="@Product_PhotosService.convertImageDisplay(photosDisplay.FirstOrDefault(p => p.Code_ID == _offerProducts[j].Code_ID).Photos)" />
                                                            }
                                                        <div class="card-body">
                                                            <pre class="pre">@_offerProducts[j].Product_Name   ₡@_offerProducts[j].Price</pre>
                                                            <p class="card-text">@_offerProducts[j].Product_Description</p>

                                                            @{int n = _offerProducts[j].Code_ID;
                                                                int m = _offerProducts[j].Category_ID;
                                                                string o = _offerProducts[j].Entrepreneur_Email;
                                                            }
                                                            @if(@log)
                                                            {
                                                                <button class="btn btn-primary" @onclick="() => addInCart(n, m, o)">Añadir al carrito</button>
                                                            }
                                                            else
                                                            {
                                                                <button class="btn btn-primary" @onclick="() => addInCart(n, m, o)" disabled>Añadir al carrito</button>
                                                            }

                                                        </div>
                                                        </div>
                                                    </div>
                                                }
                                                @{i += 3;}
                                            </div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="carousel-item">
                                        <div class="container">
                                            <div class="row">

                                                @for (int j = i; j < i + 3; j++)
                                                {
                                                    @if(j < productsSize) {
                                                    <div class="col-sm">
                                                        <div class="card">
                                                            @if (photosDisplay.FirstOrDefault(p => p.Code_ID == _offerProducts[j].Code_ID) != null)
                                                            {
                                                                <img class="img-card m-auto" src="@Product_PhotosService.convertImageDisplay(photosDisplay.FirstOrDefault(p => p.Code_ID == _offerProducts[j].Code_ID).Photos)" />
                                                            }
                                                        <div class="card-body">
                                                            <pre class="pre">@_offerProducts[j].Product_Name   ₡@_offerProducts[j].Price</pre>
                                                            <p class="card-text">@_offerProducts[j].Product_Description</p>

                                                            @{int n = _offerProducts[j].Code_ID;
                                                                int m = _offerProducts[j].Category_ID;
                                                                string o = _offerProducts[j].Entrepreneur_Email;
                                                            }
                                                            @if (@log)
                                                            {
                                                                <button class="btn btn-primary" @onclick="() => addInCart(n, m, o)">Añadir al carrito</button>
                                                            }
                                                            else
                                                            {
                                                                <button class="btn btn-primary" @onclick="() => addInCart(n, m, o)" disabled>Añadir al carrito</button>
                                                            }
                                                        </div>
                                                        </div>
                                                    </div>
                                                    }
                                                }
                                                @{i += 3;}
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        }

                    </div>

                    <div class="d-flex justify-content-center mb-4">
                        <button class="carousel-control-prev position-relative" type="button" data-bs-target="#carousel1" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next position-relative" type="button" data-bs-target="#carousel1" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    </div>

                </div>
            </div>

            <hr>

            <h5 class="title">Productos Recomendados</h5>

            <div class="container my-5">
                <div id="carousel2" class="carousel slide carousel-dark text-center" data-bs-ride="carousel">
                    <div class="carousel-inner py-4">

                        @if (_recommendedProducts.Count() > 0)
                        {
                            int productsSize = _recommendedProducts.Count();

                            for (int i = 0; i < productsSize; i++)
                            {
                                if (i == 0)
                                {
                                    <div class="carousel-item active">
                                        <div class="container">
                                            <div class="row">

                                                @for (int j = i; j < i + 3; j++)
                                                {
                                                    @if (j < productsSize)
                                                    {
                                                        <div class="col-sm">
                                                            <div class="card">
                                                                @if (photosDisplay.FirstOrDefault(p => p.Code_ID == _recommendedProducts[j].Code_ID) != null)
                                                                {
                                                                    <img class="img-card m-auto" src="@Product_PhotosService.convertImageDisplay(photosDisplay.FirstOrDefault(p => p.Code_ID == _recommendedProducts[j].Code_ID).Photos)" />
                                                                }
                                                            <div class="card-body">
                                                                <pre class="pre">@_recommendedProducts[j].Product_Name   ₡@_recommendedProducts[j].Price</pre>
                                                                <p class="card-text">@_recommendedProducts[j].Product_Description</p>

                                                                @{int n = _recommendedProducts[j].Code_ID;
                                                                    int m = _recommendedProducts[j].Category_ID;
                                                                    string o = _recommendedProducts[j].Entrepreneur_Email;
                                                                }
                                                                @if (@log)
                                                                {
                                                                    <button class="btn btn-primary" @onclick="() => addInCart(n, m, o)">Añadir al carrito</button>
                                                                }
                                                                else
                                                                {
                                                                    <button class="btn btn-primary" @onclick="() => addInCart(n, m, o)" disabled>Añadir al carrito</button>
                                                                }
                                                            </div>
                                                            </div>
                                                        </div>
                                                    }
                                                }
                                                    @{i += 3;}
                                                </div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="carousel-item">
                                        <div class="container">
                                            <div class="row">

                                                @for (int j = i; j < i + 3; j++)
                                                {
                                                    @if (j < productsSize)
                                                    {
                                                        <div class="col-sm">
                                                            <div class="card">
                                                                @if (photosDisplay.FirstOrDefault(p => p.Code_ID == _recommendedProducts[j].Code_ID) != null)
                                                                {
                                                                    <img class="img-card m-auto" src="@Product_PhotosService.convertImageDisplay(photosDisplay.FirstOrDefault(p => p.Code_ID == _recommendedProducts[j].Code_ID).Photos)" />
                                                                }
                                                            <div class="card-body">
                                                                <pre class="pre">@_recommendedProducts[j].Product_Name   ₡@_recommendedProducts[j].Price</pre>
                                                                <p class="card-text">@_recommendedProducts[j].Product_Description</p>

                                                                @{int n = _recommendedProducts[j].Code_ID;
                                                                    int m = _recommendedProducts[j].Category_ID;
                                                                    string o = _recommendedProducts[j].Entrepreneur_Email;
                                                                }
                                                                @if (@log)
                                                                {
                                                                    <button class="btn btn-primary" @onclick="() => addInCart(n, m, o)">Añadir al carrito</button>
                                                                }
                                                                else
                                                                {
                                                                    <button class="btn btn-primary" @onclick="() => addInCart(n, m, o)" disabled>Añadir al carrito</button>
                                                                }

                                                            </div>
                                                            </div>
                                                        </div>
                                                    }
                                                }
                                                @{i += 3;}
                                                </div>
                                        </div>
                                    </div>
                                }
                            }
                        }

                    </div>

                    <div class="d-flex justify-content-center mb-4">
                        <button class="carousel-control-prev position-relative" type="button" data-bs-target="#carousel2" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next position-relative" type="button" data-bs-target="#carousel2" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    </div>

                </div>
            </div>

            <hr>

            <h5 class="title">Novedades</h5>

            <div class="container my-5">
                <div id="carousel3" class="carousel slide carousel-dark text-center" data-bs-ride="carousel">
                    <div class="carousel-inner py-4">

                        @if (_newProducts.Count() > 0)
                        {
                            int productsSize = _newProducts.Count();

                            for (int i = 0; i < productsSize; i++)
                            {
                                if (i == 0)
                                {
                                    <div class="carousel-item active">
                                        <div class="container">
                                            <div class="row">

                                                @for (int j = i; j < i + 3; j++)
                                                {
                                                    <div class="col-sm">
                                                        <div class="card">
                                                            @if (photosDisplay.FirstOrDefault(p => p.Code_ID == _newProducts[j].Code_ID) != null)
                                                            {
                                                                <img class="img-card m-auto" src="@Product_PhotosService.convertImageDisplay(photosDisplay.FirstOrDefault(p => p.Code_ID == _newProducts[j].Code_ID).Photos)" />
                                                            }
                                                        <div class="card-body">
                                                            <pre>@_newProducts[j].Product_Name   ₡@_newProducts[j].Price</pre>
                                                            <p class="card-text">@_newProducts[j].Product_Description</p>

                                                            @{int n = _newProducts[j].Code_ID;
                                                                int m = _newProducts[j].Category_ID;
                                                                string o = _newProducts[j].Entrepreneur_Email;
                                                            }
                                                            @if (@log)
                                                            {
                                                                <button class="btn btn-primary" @onclick="() => addInCart(n, m, o)">Añadir al carrito</button>
                                                            }
                                                            else
                                                            {
                                                                <button class="btn btn-primary" @onclick="() => addInCart(n, m, o)" disabled>Añadir al carrito</button>
                                                            }

                                                        </div>
                                                        </div>
                                                    </div>
                                                }
                                                @{i += 3;}
                                            </div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="carousel-item">
                                        <div class="container">
                                            <div class="row">

                                                @for (int j = i; j < i + 3; j++)
                                                {
                                                    @if (j < productsSize)
                                                    {
                                                        <div class="col-sm">
                                                            <div class="card">
                                                                @if (photosDisplay.FirstOrDefault(p => p.Code_ID == _newProducts[j].Code_ID) != null)
                                                                {
                                                                    <img class="img-card m-auto" src="@Product_PhotosService.convertImageDisplay(photosDisplay.FirstOrDefault(p => p.Code_ID == _newProducts[j].Code_ID).Photos)" />
                                                                }
                                                            <div class="card-body">
                                                                <pre class="pre">@_newProducts[j].Product_Name   ₡@_newProducts[j].Price</pre>
                                                                <p class="card-text">@_newProducts[j].Product_Description</p>

                                                                @{int n = _newProducts[j].Code_ID;
                                                                    int m = _newProducts[j].Category_ID;
                                                                    string o = _newProducts[j].Entrepreneur_Email;
                                                                }
                                                                @if (@log)
                                                                {
                                                                    <button class="btn btn-primary" @onclick="() => addInCart(n, m, o)">Añadir al carrito</button>
                                                                }
                                                                else
                                                                {
                                                                    <button class="btn btn-primary" @onclick="() => addInCart(n, m, o)" disabled>Añadir al carrito</button>
                                                                }

                                                            </div>
                                                            </div>
                                                        </div>
                                                    }
                                                }
                                                @{i += 3;}
                                                </div>
                                        </div>
                                    </div>
                                }
                            }
                        }

                    </div>

                    <div class="d-flex justify-content-center mb-4">
                        <button class="carousel-control-prev position-relative" type="button" data-bs-target="#carousel3" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next position-relative" type="button" data-bs-target="#carousel3" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    </div>

                </div>
            </div>
        </div>
    </div>
}

@code{
    //Private Variables
    private IList<Product> _offerProducts;
    private IList<Product> _recommendedProducts;
    private IList<Product> _newProducts;
    IList<Product_Photos> photosDisplay;
    private SfTreeGrid<Category> TreeGrid { get; set; }
    private IList<Category> _categories;
    private Category SelectedCategory;
    private string inputValue;

    private bool log = false;

    string email;

    bool _isLoading = true;

    //On Initialized
    protected override async Task OnInitializedAsync()
    {
        email = await sessionStorage.GetItemAsync<string>("Email");
        if(email == null) {
            email = "noEmail";
        } else
        {
            log = true;
        }

        _offerProducts = ProductService.GetOfferProducts();
        _recommendedProducts = ProductService.GetRecommendedProducts(email);
        _newProducts = ProductService.GetNewProducts();
        photosDisplay = Product_PhotosService.loadAllPhotos();
        _categories = await CategoryService.GetAsync();

        _isLoading = false;
    }

    //RowDrop
    private void Rowdrop(Syncfusion.Blazor.Grids.RowDragEventArgs<Category> args)
    {
        CategoryService.Rowdrop(args, this.TreeGrid);
    }

    //SelectionHandler
    public async Task SelectionHandler(Syncfusion.Blazor.Grids.RowSelectEventArgs<Category> args)
    {
        var SelectedCategories = await this.TreeGrid.GetSelectedRecords();
        if (SelectedCategories.Count() == 0)
        {
            AddCategories.ParentID = null;
            EditCategories.EditToolbarItemDisabled = true;
            DeleteCategories.RemoveToolbarItemDisabled = true;
            SelectedCategory = null;
        }
        else
        {
            SelectedCategory = SelectedCategories.First();
            EditCategories.EditToolbarItemDisabled = false;
            if (CategoryService.isChildNode(SelectedCategory.Id))
            {
                string categorySearch = "_categoryID = " + SelectedCategory.Id;
                NavigationManager.NavigateTo($"/ProductsSearch/{categorySearch}", true);
                DeleteCategories.RemoveToolbarItemDisabled = false;
            }
            else
            {
                DeleteCategories.RemoveToolbarItemDisabled = true;
            }
        }
    }


    private void buscar()
    {
        int emptyCharacters = 0;

        if (!string.IsNullOrEmpty(inputValue))
        {
            for (int i = 0; i < inputValue.Length; i++)
            {
                if (inputValue.ElementAt(i).Equals(' '))
                {
                    emptyCharacters++;
                }
            }

            if (emptyCharacters != inputValue.Length)
            {
                NavigationManager.NavigateTo($"/ProductsSearch/{inputValue}", true);
            }
        }

    }

    public void EnterKey(KeyboardEventArgs e)
    {
        int emptyCharacters = 0;

        if ((e.Code == "Enter" || e.Code == "NumpadEnter") && !string.IsNullOrEmpty(inputValue))
        {
            for (int i = 0; i < inputValue.Length; i++)
            {
                if (inputValue.ElementAt(i).Equals(' '))
                {
                    emptyCharacters++;
                }
            }

            if (emptyCharacters != inputValue.Length)
            {
                NavigationManager.NavigateTo($"/ProductsSearch/{inputValue}", true);
            }
        }
    }

    private void addInCart(int productID, int categoryID, string entrepreneurEmail)
    {
        bool productExist = Shopping_Cart_Has_Service.searchProduct(email, productID);
        if(productExist == false)
        {
            Shopping_Cart_Has product = new Shopping_Cart_Has
            {
                Email = email,
                Code_ID = productID,
                Entrepreneur_Email = entrepreneurEmail,
                Category_ID = categoryID
            };

            Shopping_Cart_Has_Service.addProduct(product);

            JsRuntime.InvokeVoidAsync("alerta", "PRODUCTO AGREGADO AL CARRITO");

        } else
        {
            JsRuntime.InvokeVoidAsync("alerta", "Producto ya se encuentra en el carrito");
        }

    }

}
