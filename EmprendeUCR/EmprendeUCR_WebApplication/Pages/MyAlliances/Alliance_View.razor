
@using EmprendeUCR_WebApplication.Data.Services
@using EmprendeUCR_WebApplication.Data.Entities
@using EmprendeUCR_WebApplication.Application.OrderContext.Implementations
@using System
@inject EntrepreneurService EntrepreneurService
@inject Product_ServiceService Product_ServiceService
@inject ClientService Client_Service
@inject UserServicePandemic UserService
@inject Alliance_Service allianceService
@inject OrderService OrderService
@inject NavigationManager NavManager
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage


@if (loadingPage)
{
    <body>
        Cargando ...
    </body>
}
else
{
    <body>
        <!--Display de tipos de alianzas-->
        <div class=" d-flex">
            <!--Mostrar alianzas aceptadas -->
            <div class="form-check form-switch m-lg-3">
                <input class="form-check-input" type="checkbox" id="flexSwitchCheckChecked" checked @onchange="@allowMyAceptedAlliances">
                <label class="form-check-label" for="flexSwitchCheckDefault">Alianzas aceptadas </label>
            </div>

            <!--Mostrar alianzas pendientes -->
            <div class="form-check form-switch m-lg-3">
                <input class="form-check-input" type="checkbox" id="flexSwitchCheckChecked" checked @onchange="@allowMyPendingAlliances">
                <label class="form-check-label" for="flexSwitchCheckDefault">Alianzas pendientes </label>
            </div>

            <!--Mostrar alianzas rechazadas -->
            <div class="form-check form-switch m-lg-3">
                <input class="form-check-input" type="checkbox" id="flexSwitchCheckChecked" unchecked @onchange="@allowMyRejectedAlliances">
                <label class="form-check-label" for="flexSwitchCheckDefault">Alianzas rechazadas </label>
            </div>
        </div>

        <table class="table">
            <!--Table Headers-->
            <thead class="bg-blue">
                <tr>
                    <!--Emprendedor header-->
                    <th scope="col" width="200" valign="middle" align="center"> Emprendedor </th>
                    <!--Categorías header-->
                    <th scope="col" width="200" valign="middle" align="center"> Categorías </th>
                    <!--Productos header-->
                    <th scope="col" width="200" valign="middle" align="center"> Productos o Servicios </th>
                    <!--Estado de solicitud  header-->
                    <th scope="col" width="200" valign="middle" align="center"> Estado de solicitud </th>
                    <!--Acciones header-->
                    <th scope="col" width="200" valign="middle" align="center"> Acciones </th>
                </tr>
            </thead>
            <tbody>
                <!--Mis alianzas pendientes-->
                @if (displayMyPendingAlliances && myPendingAlliances?.Count > 0)
                {
                    @foreach (var pendingAlliance in myPendingAlliances)
                    {
                        <tr class ='hover-light-grey' @onclick="() => viewEntrepreneurProfile(pendingAlliance.User_Email != userLogged? pendingAlliance.User_Email : pendingAlliance.Ally_User_Email)">
                            <!-- Nombre del emprendedor -->
                            <td scope="row" width="200" valign="middle" align="left">@(pendingAlliance.User_Email != userLogged? pendingAlliance.User_Email : pendingAlliance.Ally_User_Email)</td>
                            <!-- Categorias -->
                            <td scope="row" width="200" valign="middle" align="left"> Categoria </td>
                            <!-- Productos -->
                            <td scope="row" width="200" valign="middle" align="left"> Producto </td>
                            <!-- Estado de solicitud -->
                            <td scope="row" width="200" valign="middle" align="left">@(pendingAlliance.User_Email == userLogged? "Esperando respuesta" : "Pendiente")</td>
                            <!--Acciones de solicitud-->
                            <th scope="row">
                                <!--Rechazar alianza-->
                                <button type="button" class="btn btn-danger material-icons-outlined " @onclick="() => deleteAlliance(pendingAlliance, myPendingAlliances)">delete</button>
                                <!--Si es una solicitud de otro emprendedor, despliega la opcion de aceptar la alianza-->
                                @if (pendingAlliance.User_Email != userLogged)
                                {
                                    <button type="button" class="btn btn-success" @onclick="() => acceptAlliance(pendingAlliance)"> Aceptar</button>
                                }
                            </th>
                        </tr>
                    }
                }

                <!-- Mis alianzas aceptadas-->
                @if (displayMyAcceptedAlliances && myAcceptedAlliances?.Count > 0)
                {
                    @foreach (var acceptedAlliances in myAcceptedAlliances)
                    {
                        <tr class ='hover-light-grey' @onclick="() => viewEntrepreneurProfile(acceptedAlliances.User_Email != userLogged? acceptedAlliances.User_Email : acceptedAlliances.Ally_User_Email)">
                            <!-- Nombre del emprendedor -->
                            <td scope="row" width="200" valign="middle" align="left">@(acceptedAlliances.User_Email != userLogged? acceptedAlliances.User_Email : acceptedAlliances.Ally_User_Email)</td>
                            <!-- Categorias -->
                            <td scope="row" width="200" valign="middle" align="left"> Categoria </td>
                            <!-- Productos -->
                            <td scope="row" width="200" valign="middle" align="left"> Producto </td>
                            <!-- Estado de solicitud -->
                            <td scope="row" width="200" valign="middle" align="left">Aceptado</td>
                            <!--Borrar alianza-->
                            <th scope="row"> <button type="button" class="btn btn-danger material-icons-outlined " @onclick="() => deleteAlliance(acceptedAlliances, myAcceptedAlliances)">delete</button> </th>
                        </tr>
                    }
                }

                <!--Mis alianzas rechazadas-->
                @if (displayMyRejectedAlliances && myRejectedAlliances?.Count > 0)
                {
                    @foreach (var rejectedAlliance in myRejectedAlliances)
                    {
                        <tr class ='hover-light-grey' @onclick="() => viewEntrepreneurProfile(rejectedAlliance.User_Email != userLogged? rejectedAlliance.User_Email : rejectedAlliance.Ally_User_Email)">
                            <!-- Nombre del emprendedor -->
                            <td scope="row" width="200" valign="middle" align="left">@(rejectedAlliance.User_Email != userLogged? rejectedAlliance.User_Email : rejectedAlliance.Ally_User_Email)</td>
                            <!-- Categorias -->
                            <td scope="row" width="200" valign="middle" align="left"> -------- </td>
                            <!-- Productos -->
                            <td scope="row" width="200" valign="middle" align="left"> -------- </td>
                            <!-- Estado de solicitud -->
                            <td scope="row" width="200" valign="middle" align="left">Rechazado</td>
                            <!--Borrar alianza-->
                            <th scope="row"> <button type="button" class="btn btn-danger material-icons-outlined " @onclick="() => deleteAlliance(rejectedAlliance, myRejectedAlliances)">delete</button> </th>
                        </tr>
                    }
                }

                <!--Cuando no hay tipos de alianzas marcados-->
                @if(!displayMyAcceptedAlliances && !displayMyPendingAlliances && !displayMyRejectedAlliances)
                {
                    <p> Seleccione las alianzas que desea desplegar :)</p>
                }

            </tbody>
        </table>


        <NavLink class="nav-link" href="Alliances">
            <button class="btn btn-primary">Buscar nuevas alianzas</button>
        </NavLink>
    </body>
}




@code {

    // Stores the email of the user logged
    String userLogged = "";
    // Stores my pending alliances
    List<Alliance> myPendingAlliances = new List<Alliance>();
    // Store my accepted alliances
    List<Alliance> myAcceptedAlliances = new List<Alliance>();
    // Store my rejected Alliances
    List<Alliance> myRejectedAlliances = new List<Alliance>();
    // Display my accepted alliances
    bool displayMyAcceptedAlliances = true;
    // Display my pending alliances
    bool displayMyPendingAlliances = true;
    // Display my rejected alliances
    bool displayMyRejectedAlliances = false;
    // Loading page
    bool loadingPage = true;

    protected override async Task OnInitializedAsync()
    {
        userLogged = await sessionStorage.GetItemAsync<string>("Email");
        // Load pending alliances
        myPendingAlliances = allianceService.getAlliancesByEntrepreneurEmailAndStatus(userLogged, 0);
        // Load accepted alliances
        myAcceptedAlliances = allianceService.getAlliancesByEntrepreneurEmailAndStatus(userLogged, 1);
        // Load rejected alliances
        myRejectedAlliances = allianceService.getAlliancesByEntrepreneurEmailAndStatus(userLogged, 2);
        // Sign to the page that alerts already load all
        loadingPage = false;
    }

    public void allowMyAceptedAlliances()
    {
        displayMyAcceptedAlliances = !displayMyAcceptedAlliances;
    }

    public void allowMyPendingAlliances()
    {
        displayMyPendingAlliances = !displayMyPendingAlliances;
    }

    public void allowMyRejectedAlliances()
    {
        displayMyRejectedAlliances = !displayMyRejectedAlliances;
    }

    public void deleteAlliance(Alliance alliance, List<Alliance> list)
    {
        list.Remove(alliance);
        allianceService.delete_Alliace(alliance);
    }

    public void acceptAlliance(Alliance alliance)
    {
        // Change status to accepted
        alliance.Alliance_Status = 1;
        // Add it to the accepted alliances list
        myAcceptedAlliances.Add(alliance);
        // Erase it from the pending list
        myPendingAlliances.Remove(alliance);

    }

    public void viewEntrepreneurProfile(string entrepreneurEmail)
    {
        NavManager.NavigateTo("/My_Alliance/ViewClient/" + entrepreneurEmail);
    }
}

